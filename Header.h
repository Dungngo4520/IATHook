#include <stdio.h>
#include <Windows.h>
#include <time.h>
#include <Psapi.h>

extern LPVOID oldLoadLibrary, oldCreateProcess, oldWriteFile, oldReadFile, oldRegSetValue;

typedef HMODULE (WINAPI *FuncLoadLibrary)(LPCSTR);
typedef BOOL (WINAPI *FuncCreateProcessA)(LPCSTR, LPSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCSTR, LPSTARTUPINFOA, LPPROCESS_INFORMATION);
typedef BOOL(WINAPI* FuncWriteFile)(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
typedef BOOL (WINAPI* FuncReadFile)(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
typedef LSTATUS (APIENTRY* FuncRegSetValueExA)(HKEY, LPCSTR, DWORD, DWORD, CONST BYTE *, DWORD);

HMODULE WINAPI _LoadLibraryA(LPCSTR);
BOOL WINAPI _CreateProcessA(LPCSTR, LPSTR, LPSECURITY_ATTRIBUTES, LPSECURITY_ATTRIBUTES, BOOL, DWORD, LPVOID, LPCSTR, LPSTARTUPINFOA, LPPROCESS_INFORMATION);
BOOL WINAPI _WriteFile(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED);
BOOL WINAPI _ReadFile(HANDLE, LPVOID, DWORD, LPDWORD, LPOVERLAPPED);
LSTATUS APIENTRY _RegSetValueExA(HKEY, LPCSTR, DWORD, DWORD, CONST BYTE *, DWORD);

bool HookIAT(char* functionName, DWORD64 newFunction, LPVOID* oldFunction);
void UnHook();
extern "C" __declspec(dllexport) void WINAPI CreateHook(char* functionName);
